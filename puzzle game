import random

# Function to create a grid with pairs of numbers
def create_board(size):
    numbers = list(range(1, (size * size) // 2 + 1)) * 2
    random.shuffle(numbers)
    board = []
    for i in range(size):
        board.append(numbers[i * size:(i + 1) * size])
    return board

# Function to print the board (hide unrevealed numbers)
def print_board(board, revealed):
    for i in range(len(board)):
        for j in range(len(board[i])):
            if revealed[i][j]:
                print(f"{board[i][j]:2}", end="  ")
            else:
                print(" X", end="  ")
        print()
    print()

# Function to check if all cards are matched
def all_matched(revealed):
    for row in revealed:
        if False in row:
            return False
    return True

# Memory puzzle game function
def memory_puzzle_game(size=4):
    board = create_board(size)
    revealed = [[False] * size for _ in range(size)]
    attempts = 0

    while not all_matched(revealed):
        print_board(board, revealed)

        try:
            # Get the first guess
            row1, col1 = map(int, input("Enter row and column for the first card (e.g., 1 1): ").split())
            if revealed[row1][col1]:
                print("This card is already revealed. Try again.")
                continue
            revealed[row1][col1] = True

            print_board(board, revealed)

            # Get the second guess
            row2, col2 = map(int, input("Enter row and column for the second card (e.g., 2 2): ").split())
            if revealed[row2][col2] or (row1 == row2 and col1 == col2):
                print("Invalid choice. Try again.")
                revealed[row1][col1] = False
                continue
            revealed[row2][col2] = True

            print_board(board, revealed)

            # Check if the two cards match
            if board[row1][col1] != board[row2][col2]:
                print("Not a match!")
                revealed[row1][col1] = False
                revealed[row2][col2] = False
            else:
                print("It's a match!")
                attempts += 1

        except (ValueError, IndexError):
            print("Invalid input. Please enter valid row and column numbers.")

    print(f"Congratulations! You've matched all the cards in {attempts} attempts!")

# Main function to run the game
if __name__ == "__main__":
    memory_puzzle_game()